[project]
name = "evalyo"
version = "0.1.0"
description = "DMOJ, modernized"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "ansi2html==1.9.2",
    "bleach[css]>=6.2.0",
    "celery>=5.5.3",
    "django==5.2.5",
    "django-admin-sortable2>=2.2.8",
    "django-compressor>=3",
    "django-fernet-fields",
    "django-impersonate>=1.9.5",
    "django-jinja>=2.5.0",
    "django-mptt>=0.13",
    "martor>=1.6.0",
    "django-ace>=1.35.0",
    "django-registration-redux>=2.10",
    "django-reversion>=5",
    "django-social-share>=2.3.0",
    "django-sortedm2m>=3.1.0",
    "django-statici18n>=2.6.0",
    "dmoj-wpadmin",
    "icalendar>=6.3.1",
    "importlib-metadata<5",
    "jinja2>=3.1.6",
    "llist>=0.7.1",
    "lupa>=2.5",
    "lxml>=6.0.0",
    "lxml-html-clean>=0.4.2",
    "mistune<2",
    "netaddr>=1.3.0",
    "packaging<22",
    "pika>=1.3.2",
    "pygments>=2.19.2",
    "pymoss>=0.2",
    "pymysql>=1.1.1",
    "pyotp>=2.9.0",
    "pytz>=2025.2",
    "pyyaml>=6.0.2",
    "qrcode[pil]>=8.2",
    "requests>=2.32.4",
    "social-auth-app-django>=5.5.1",
    "social-auth-core>=4.7.0",
    "sqlparse>=0.5.3",
    "ua-parser>=1.0.1",
    "webauthn<1",
    "jsonfield>=3.2.0", # Legacy migrations
]

[project.optional-dependencies]
dev = [
    "ruff>=0.12.8",
]
test = [
    "coverage>=7.0",
    "mysqlclient>=2.0",
]

[tool.uv.sources]
dmoj-wpadmin = { git = "https://github.com/DMOJ/dmoj-wpadmin.git" }
django-fernet-fields = { git = "https://github.com/DMOJ/django-fernet-fields.git" }


[tool.ruff]
line-length = 120
target-version = "py312"

# Exclude directories and files similar to flake8
exclude = [
    "dmoj/local_settings.py",
    ".ci.settings.py",
    "__pycache__",
    ".git",
    ".venv",
    "migrations",
]

[tool.ruff.lint]
# Enable rule categories equivalent to flake8 configuration
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort (import sorting)
    "UP",  # pyupgrade
    "C90", # mccabe complexity
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
    "DJ",  # flake8-django
    "PIE", # flake8-pie
    "T20", # flake8-print
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "G",   # flake8-logging-format (equivalent to enable-extensions = G)
]

# Ignore rules equivalent to flake8 ignore list
ignore = [
    "E501",   # line too long (handled by line-length setting)
    "T201",   # print statements (keeping for development convenience)
    "T203",   # pprint statements (keeping for development convenience)
    # W504 (line break after binary operator) - Ruff handles this differently and it's not problematic
    # C814 (missing trailing comma) - handled by formatter
]

# Per-file ignores equivalent to flake8 per-file-ignores
[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = [
    "F401",  # unused imports
    "F403",  # import *
]
"judge/management/commands/runmoss.py" = [
    "F403",  # import *
    "F405",  # name comes from import *
]
"judge/migrations/*.py" = [
    "E501",  # line too long
]

[tool.ruff.lint.isort]
# Configure import sorting similar to flake8 import-order-style = pycharm
known-first-party = ["dmoj", "judge"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
split-on-trailing-comma = true
force-single-line = false

[tool.ruff.lint.mccabe]
# Set complexity threshold (default is 10, keeping reasonable for Django project)
max-complexity = 10

[tool.ruff.format]
# Use double quotes for strings (Python convention)
quote-style = "double"
# Keep line length consistent
line-ending = "lf"
indent-style = "space"
skip-magic-trailing-comma = false

[dependency-groups]
dev = [
    "ruff>=0.12.8",
]
